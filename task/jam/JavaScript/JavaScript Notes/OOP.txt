uses constructors as class

OOP - Object Oriented Programming
- based on real world scenarion/things

4 Pillars of OOP  - Lexical Scope
Abstraction - simple model of a more complex thing
-dvd player 



Encapsulation - 
it binds the code and the data together and keeps them safe from outside interference.


Inheritance - const pasagi = new jamol / uses constructor



Polymorphism - many forms ---- method overriding/overloading
- is the process of using same method name by
multiple classes and redefines methods for the derived classes.

Class & Object
Class - parent, whole, majority
Object - child, pieces, characteristics, properties

this 
refers to the current object in a method or constructor.



OOP
2.) Declaring objects,accessing elements inside objects.
const obj = {
    properties: value;
}

obj.property;

3.)Pillars of OOP
-Encapsulation
-Inheritance
-Polymorphism
-Abstraction
4.)OOP vs Procedural vs functional 

-Object-oriented programming (OOP) is about encapsulating data and behavior into objects.
-Functional programming (FP) is about passing data from function to function to function to get a result.
-Procedural programming (PP), also known as inline programming takes a top-down approach. It is about 
writing a list of instructions to tell the computer what to do step by step. It relies on procedures or routines.

5.)primitives and reference type

The size of a primitive value is fixed, therefore, JavaScript stores the primitive value on the stack.

On the other hand, the size of a reference value is dynamic so JavaScript stores the reference value on the heap

If the value is a primitive value, when you access the variable, you manipulate the actual value stored in that variable. 
In other words, the variable that stores a primitive value is accessed by value.

Unlike a primitive value, when you manipulate an object, you work on the reference of that object, 
rather than the actual object. It means a variable that stores an object is accessed by reference.

6.) factories and constructor 
-need to instantiate an object
A factory function is any function which is not a class or constructor that returns a (presumably new) object. 
In JavaScript, any function can return an object. When it does so without the new keyword, itâ€™s a factory function.
function person(firstName, lastName, age) {
  const person = {}; //instance
  person.firstName = firstName;
  person.lastName = lastName;
  person.age = age;
  return person;
}

-direct to object
 The convention of defining a constructor function is to use capitalize function name to denote that this is a constructor function, 
 the use case of this function is that creating similar 
 types of objects with the new keyword, then later we can do instance checks using theinstanceof keyword in JavaScript.

 function Person(firstName, lastName, age) {
  this.firstName = firstName;
  this.lastName = lastName;
  this.age = age;
}
7.) review the this keyword
refers to the current object in a method or constructor.